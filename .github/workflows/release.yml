# https://github.com/changesets/action
name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          version: 16.x

      - name: Install Dependencies
        run: yarn
        env:
          NPM_TOKEN: ${{ secrets.NPM_AUTH }} # Ensure to have this set up under Github secrets

      - name: Build package
        run: yarn build

      - name: Create Release Pull Request or Publish to npm
        uses: changesets/action@master
        with:
          publish: yarn release
          commit: "ci: release packages"
          title: "ci: release packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Ensure to have this set up under Github secrets
          NPM_TOKEN: ${{ secrets.NPM_AUTH }} # Ensure to have this set up under Github secrets

      # - name: Get yarn cache directory path
      #   id: yarn-cache-dir-path
      #   run: echo "::set-output name=dir::$(yarn cache dir)"

      # - name: Cache node_modules
      #   uses: actions/cache@v2
      #   with:
      #     path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
      #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      #       ${{ runner.os }}-yarn-
      # - name: Install dependencies
      #   run: yarn --frozen-lockfile --network-timeout 300000

    

      # - name: Create Release Pull Request or Publish to npm
      #   id: changesets
      #   uses: changesets/action@v1
      #   with:
      #     publish: yarn release
      #     commit: "ci: release packages"
      #     title: "ci: release packages"
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Send a Slack notification if a publish happens
        if: steps.changesets.outputs.published == 'true'
        # You can do something when a publish happens.
        run: my-slack-bot send-notification --message "A new version of ${GITHUB_REPOSITORY} was published!"
      
      - name: Send a Slack notification if a publish fails
        if: steps.changesets.outputs.published == 'false'
        # You can do something when a publish fails.
        run: my-slack-bot send-notification --message "A new version of ${GITHUB_REPOSITORY} was failed to publish!"
